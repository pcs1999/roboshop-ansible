
- name: Install mysql & python3-PyMySQL
  ansible.builtin.yum:
    name:
     - python3-PyMySQL
     - mysql
    state: installed


#- name: Check Schema is Loaded or not
#  community.mysql.mysql_info:
#    filter:
#      - databases
#    exclude_fields: db_size
#    return_empty_dbs: false
#    login_host: "{{ lookup('aws_ssm', '{{env}}.rds.endpoint', region='us-east-1' ) }}"
#    login_user: "{{ lookup('aws_ssm', '{{env}}.rds.DB_ADMIN_USER', region='us-east-1' ) }}"
#    login_password: "{{ lookup('aws_ssm', '{{env}}.rds.DB_ADMIN_PASS', region='us-east-1' ) }}"
#  register: out

#- name: Load MySQL Schema
#  community.mysql.mysql_db:
#    state: import
#    name: all
#    target: /app/schema/{{component}}.sql
#    login_host: "{{ lookup('aws_ssm', '{{env}}.rds.ENDPOINT', region='us-east-1' ) }}"
#    login_user: "{{ lookup('aws_ssm', '{{env}}.rds.DB_ADMIN_USER', region='us-east-1' ) }}"
#    login_password: "{{ lookup('aws_ssm', '{{env}}.rds.DB_ADMIN_PASS', region='us-east-1' ) }}"
#  when: "'cities' not in out.databases"


- name: load mysql schema
  ansible.builtin.shell: mysql -h {{ lookup('aws_ssm', '{{env}}.rds.endpoint', region='us-east-1' ) }} -u{{ lookup('aws_ssm', '{{env}}.rds.DB_ADMIN_USER', region='us-east-1' ) }} -p{{ lookup('aws_ssm', '{{env}}.rds.DB_ADMIN_PASS', region='us-east-1' ) }} </app/schema/{{component}}.sql
#  when: "'cities' not in out.databases"



- name: REStart {{component}} Service
  ansible.builtin.systemd:
    name: "{{component}}"
    state: restarted